import datetime
import random

from sqlalchemy import select
from db import new_session
from db.events import EventActivityOrm, EventOrm, EventParticipationOrm, ParticipantTypeEnum, ParticipationMemberOrm, \
    ScoreOrm, EventJudgeOrm, EventMediaOrm, MediaEnum
from db.users import UserOrm, RoleEnum
from auth.security import get_password_hash

INITIAL_USERS = {
    "admin": {
        "handle": "1",
        "email": "admin@sirius.com",
        "password": "123456789",
        "full_name": "–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        "phone": "+70000000001",
        "role": RoleEnum.admin,
    },
    "organizer": {
        "handle": "2",
        "email": "organizer@sirius.com",
        "password": "123456789",
        "full_name": "–ì–ª–∞–≤–Ω—ã–π –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä",
        "phone": "+70000000002",
        "role": RoleEnum.organizer,
    },
    **{f"player{i}": {
        "handle": f"10{i}",
        "email": f"player{i}@test.com",
        "password": "password",
        "full_name": f"–ò–≥—Ä–æ–∫ {i}",
        "avatar_url": f"https://i.pravatar.cc/150?u=player{i}",
        "phone": f"+711122233{i:02d}"} for i in range(20)
    }
}


async def create_initial_users():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç –≤ –ë–î."""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    async with new_session() as session:
        for key, user_data in INITIAL_USERS.items():
            user_exists = await session.execute(
                select(UserOrm).where(UserOrm.handle == user_data["handle"])
            )
            if not user_exists.scalar_one_or_none():
                print(f"–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {key}")
                password = user_data.pop("password")
                user_data["hashed_password"] = get_password_hash(password)

                user_data.setdefault("birthday", datetime.date.fromisoformat("2000-01-01"))
                user_data.setdefault("gender", "male")

                new_user = UserOrm(**user_data)
                session.add(new_user)
        await session.commit()
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


INITIAL_EVENTS = [
    {
        "title": "–õ–µ—Ç–Ω–∏–π –º–∞—Ä–∞—Ñ–æ–Ω –∫–æ–¥–∞",
        "description": "–ï–∂–µ–≥–æ–¥–Ω—ã–π –º–∞—Ä–∞—Ñ–æ–Ω –¥–ª—è –ª—É—á—à–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤. 24 —á–∞—Å–∞ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞, –ø–∏—Ü—Ü–∞ –∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏!",
        "date": datetime.date.today() + datetime.timedelta(days=30),  # –ë—É–¥—É—â–µ–µ
        "start_time": datetime.time(12, 0),
        "end_time": datetime.time(12, 0),  # –ù–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å, –Ω–æ –¥–∞—Ç–∞ –æ–¥–Ω–∞
        "is_team": False,
        "max_members": 100,
        "max_teams": None,
        "activities": [
            {"name": "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ä—á–∞", "icon": "üëï", "start_dt": datetime.datetime(2025, 8, 15, 12, 0),
             "end_dt": datetime.datetime(2025, 8, 15, 13, 0)},
        ]
    },
    {
        "title": "–ß–µ–º–ø–∏–æ–Ω–∞—Ç –ø–æ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–µ",
        "description": "–°–æ–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ–≥–æ —Ä–æ–±–æ—Ç–∞ –∏ —Å—Ä–∞–∑–∏—Ç–µ—Å—å –Ω–∞ –∞—Ä–µ–Ω–µ. –ì–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑ - —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞ –≤ –≤–µ–¥—É—â–µ–π IT-–∫–æ–º–ø–∞–Ω–∏–∏.",
        "date": datetime.date.today(),  # –¢–µ–∫—É—â–µ–µ
        "start_time": datetime.time(9, 0),
        "end_time": datetime.time(18, 0),
        "is_team": True,
        "max_members": 20,
        "max_teams": 5,
        "activities": [
            {"name": "–°–±–æ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–±–æ—Ç–æ–≤", "icon": "üõ†Ô∏è", "is_scoreable": True, "max_score": 50},
            {"name": "–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–µ–∑–¥—ã", "icon": "‚è±Ô∏è", "is_scoreable": True, "is_versus": True,
             "max_score": 100},
            {"name": "–§–∏–Ω–∞–ª—å–Ω–∞—è –±–∏—Ç–≤–∞ —Ä–æ–±–æ—Ç–æ–≤", "icon": "ü§ñ", "is_scoreable": True, "is_versus": True, "max_score": 200},
        ]
    },
    {
        "title": "–•–∞–∫–∞—Ç–æ–Ω '–£–º–Ω—ã–π –ì–æ—Ä–æ–¥'",
        "description": "–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—Ä–µ–¥—ã –∑–∞ 48 —á–∞—Å–æ–≤. –õ—É—á—à–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –±—É–¥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ–¥–∞.",
        "date": datetime.date.today() - datetime.timedelta(days=60),  # –ü—Ä–æ—à–µ–¥—à–µ–µ
        "start_time": datetime.time(18, 0),
        "end_time": datetime.time(18, 0),
        "is_team": True,
        "max_members": 30,
        "max_teams": 6,
        "activities": []
    }
]


async def create_initial_events():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç."""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π...")
    async with new_session() as session:
        for event_data in INITIAL_EVENTS:
            event_exists = await session.execute(
                select(EventOrm).where(EventOrm.title == event_data["title"])
            )
            if not event_exists.scalar_one_or_none():
                print(f"–°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event_data['title']}")
                activities_data = event_data.pop("activities", [])

                new_event = EventOrm(**event_data)

                # –°–æ–∑–¥–∞–µ–º –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫ —Å–æ–±—ã—Ç–∏—é
                new_event.activities = [
                    EventActivityOrm(**activity) for activity in activities_data
                ]

                session.add(new_event)
        await session.commit()
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


async def create_leaderboard_data():
    """–°–æ–∑–¥–∞–µ—Ç –¥–≤–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∏ –æ—á–∫–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞."""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞...")
    async with new_session() as session:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–Ω–æ –ª–∏ —É–∂–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞, –∏ –≤—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ –¥–∞
        res_check = await session.execute(
            select(EventOrm).where(EventOrm.title == "–ß–µ–º–ø–∏–æ–Ω–∞—Ç –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é"))
        if res_check.scalar_one_or_none():
            print("–î–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç.")
            return

        print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞...")
        today = datetime.date.today()

        # 2. –°–æ–∑–¥–∞–µ–º 3 –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
        activities_data = [
            {"name": "–û—Ç–±–æ—Ä–æ—á–Ω—ã–π —Ç—É—Ä", "is_scoreable": True, "max_score": 100},
            {"name": "–ü–æ–ª—É—Ñ–∏–Ω–∞–ª", "is_scoreable": True, "max_score": 200},
            {"name": "–ì—Ä–∞–Ω–¥-—Ñ–∏–Ω–∞–ª", "is_scoreable": True, "max_score": 300},
        ]

        # 3. –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
        team_event = EventOrm(
            title="–ß–µ–º–ø–∏–æ–Ω–∞—Ç –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
            date=today,
            is_team=True, max_members=50, max_teams=10,
            activities=[EventActivityOrm(**ad) for ad in activities_data]
        )
        session.add(team_event)

        # 4. –°–æ–∑–¥–∞–µ–º –ª–∏—á–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
        solo_event = EventOrm(
            title="–û–¥–∏–Ω–æ—á–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä –ø–æ —Ä–µ—à–µ–Ω–∏—é –∑–∞–¥–∞—á",
            date=today,
            is_team=False, max_members=10,
            activities=[EventActivityOrm(**ad) for ad in activities_data]
        )
        session.add(solo_event)

        # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–±—ã—Ç–∏–π –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
        await session.flush()

        # 5. –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –Ω–∞—à–∏—Ö "–∏–≥—Ä–æ–∫–æ–≤"
        res_players = await session.execute(select(UserOrm).where(UserOrm.email.like("player%@test.com")))
        players = res_players.scalars().all()

        # 6. –°–æ–∑–¥–∞–µ–º 10 –∫–æ–º–∞–Ω–¥ –∏ –Ω–∞—á–∏—Å–ª—è–µ–º –∏–º –æ—á–∫–∏
        for i in range(10):
            captain = players[i]
            member = players[i + 10]
            team_participation = EventParticipationOrm(
                event_id=team_event.id, creator_id=captain.id,
                participant_type=ParticipantTypeEnum.team, team_name=f"–ö–æ–º–∞–Ω–¥–∞ #{i + 1}"
            )
            team_participation.members.extend([
                ParticipationMemberOrm(user_id=captain.id),
                ParticipationMemberOrm(user_id=member.id)
            ])
            session.add(team_participation)
            await session.flush()  # –ü–æ–ª—É—á–∞–µ–º ID —É—á–∞—Å—Ç–∏—è

            # –ù–∞—á–∏—Å–ª—è–µ–º –æ—á–∫–∏ –∑–∞ –∫–∞–∂–¥—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            for activity in team_event.activities:
                score = ScoreOrm(
                    participation_id=team_participation.id, activity_id=activity.id,
                    score=random.randint(20, activity.max_score)
                )
                session.add(score)

        # 7. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º 10 –æ–¥–∏–Ω–æ—á–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –∏ –Ω–∞—á–∏—Å–ª—è–µ–º –∏–º –æ—á–∫–∏
        for i in range(10):
            player = players[i]
            solo_participation = EventParticipationOrm(
                event_id=solo_event.id, creator_id=player.id,
                participant_type=ParticipantTypeEnum.individual
            )
            solo_participation.members.append(ParticipationMemberOrm(user_id=player.id))
            session.add(solo_participation)
            await session.flush()

            # –ù–∞—á–∏—Å–ª—è–µ–º –æ—á–∫–∏ –∑–∞ –∫–∞–∂–¥—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            for activity in solo_event.activities:
                score = ScoreOrm(
                    participation_id=solo_participation.id, activity_id=activity.id,
                    score=random.randint(10, activity.max_score)
                )
                session.add(score)

        await session.commit()
    print("–°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")


async def create_demo_events():
    """–°–æ–∑–¥–∞–µ—Ç 6 –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π...")
    async with new_session() as session:
        res_check = await session.execute(select(EventOrm).where(EventOrm.title == "Sirius Summer Volleyball Cup"))
        if res_check.scalar_one_or_none():
            print("–î–µ–º–æ-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç.")
            return

        print("–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –∫–æ–º–∞–Ω–¥ –∏ –æ—á–∫–æ–≤...")
        today = datetime.date(2025, 7, 22)
        res_users = await session.execute(select(UserOrm))
        users = res_users.scalars().all()
        admin, organizer = users[0], users[1]
        players = users[2:]

        # --- –î–ï–¢–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï –î–õ–Ø –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô ---
        DEMO_EVENTS_DATA = [
            # --- –¢–ï–ö–£–©–ò–ï ---
            {
                "data": {
                    "title": "–¢—É—Ä–Ω–∏—Ä –ø–æ –±–∞—Å–∫–µ—Ç–±–æ–ª—É 3x3", "date": today, "is_team": True, "max_teams": 8, "max_members": 40,
                    "start_time": datetime.time(9, 0), "end_time": datetime.time(18, 0),
                    "description": "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∂–∞—Ä–∫–æ–º—É –∞—Å—Ñ–∞–ª—å—Ç—É! –ï–∂–µ–≥–æ–¥–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä –ø–æ —Å—Ç—Ä–∏—Ç–±–æ–ª—É —Å—Ä–µ–¥–∏ –ª—É—á—à–∏—Ö –∫–æ–º–∞–Ω–¥ –°–∏—Ä–∏—É—Å–∞. –î–∏–Ω–∞–º–∏—á–Ω—ã–µ –º–∞—Ç—á–∏, –º—É–∑—ã–∫–∞ –∏ –æ—Ç–ª–∏—á–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∫–∞–∂–∏—Ç–µ —Å–≤–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –≤–ª–∞–¥–µ–Ω–∏—è –º—è—á–æ–º –∏ –∫–æ–º–∞–Ω–¥–Ω—É—é –∏–≥—Ä—É!"
                },
                "media": [{"url": "https://images.unsplash.com/photo-1546519638-68e109498ffc?q=80&w=2070", "name": "–ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞", "media_type": MediaEnum.image}],
                "activities": [
                    {"name": "–¶–µ—Ä–µ–º–æ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è", "is_scoreable": False, "icon": "üéâ", "latitude": 43.4070, "longitude": 39.9590, "start_dt": datetime.datetime(2025, 7, 21, 9, 0), "end_dt": datetime.datetime(2025, 7, 21, 9, 30)},
                    {"name": "–ì—Ä—É–ø–ø–æ–≤–æ–π —ç—Ç–∞–ø", "is_scoreable": True, "max_score": 100, "icon": "üèÄ", "latitude": 43.4075, "longitude": 39.9594},
                    {"name": "–ü–ª–µ–π-–æ—Ñ—Ñ", "is_scoreable": True, "max_score": 200, "icon": "üèÜ", "latitude": 43.4080, "longitude": 39.9598},
                ],
                "judges": [organizer],
                "participations": [
                    {"team_name": "–ö–æ–º–µ—Ç–∞", "captain": players[0], "members": [players[1]], "avatar": "https://api.dicebear.com/8.x/shapes/svg?seed=comet"},
                    {"team_name": "–í—ã–º–ø–µ–ª", "captain": players[2], "members": [players[3]], "avatar": "https://api.dicebear.com/8.x/shapes/svg?seed=vimpel"},
                    {"team_name": "–ó–≤–µ–∑–¥–∞", "captain": players[4], "members": [players[5]], "avatar": "https://api.dicebear.com/8.x/shapes/svg?seed=star"},
                    {"team_name": "–ö—Ä–∏—Å—Ç–∞–ª–ª", "captain": players[6], "members": [players[7]], "avatar": "https://api.dicebear.com/8.x/shapes/svg?seed=crystal"},
                ]
            },
            {
                "data": {
                    "title": "–û—Ç–∫—Ä—ã—Ç—ã–π —Ç—É—Ä–Ω–∏—Ä –ø–æ —à–∞—Ö–º–∞—Ç–∞–º", "date": today, "is_team": False, "max_members": 10,
                    "start_time": datetime.time(10, 0), "end_time": datetime.time(16, 0),
                    "description": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –±–∏—Ç–≤–∞ –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–æ–≤ –∏ —Ç–∞–∫—Ç–∏–∫–æ–≤. –í —ç—Ç–æ–º —Ç—É—Ä–Ω–∏—Ä–µ –≤–∞–∂–Ω—ã –Ω–µ —Ç–æ–ª—å–∫–æ –∑–Ω–∞–Ω–∏–µ –¥–µ–±—é—Ç–æ–≤, –Ω–æ –∏ –≤—ã–¥–µ—Ä–∂–∫–∞, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –∏ —É–º–µ–Ω–∏–µ –º—ã—Å–ª–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ö–æ–¥–æ–≤ –≤–ø–µ—Ä–µ–¥. –ü—Ä–∏–≥–ª–∞—à–∞—é—Ç—Å—è –≤—Å–µ –∂–µ–ª–∞—é—â–∏–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞."
                },
                "media": [{"url": "https://images.unsplash.com/photo-1529699211952-734e80c4d42b?q=80&w=2071", "name": "–®–∞—Ö–º–∞—Ç–Ω–∞—è –ø–∞—Ä—Ç–∏—è", "media_type": MediaEnum.image}],
                "activities": [
                    {"name": "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "is_scoreable": False, "icon": "üìù", "latitude": 43.4090, "longitude": 39.9600, "start_dt": datetime.datetime(2025, 7, 21, 10, 0), "end_dt": datetime.datetime(2025, 7, 21, 11, 0)},
                    {"name": "–ë–ª–∏—Ü-—Ç—É—Ä–Ω–∏—Ä", "is_scoreable": True, "max_score": 50, "icon": "‚ö°Ô∏è", "latitude": 43.4095, "longitude": 39.9605},
                    {"name": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–∞—Ä—Ç–∏—è", "is_scoreable": True, "max_score": 100, "icon": "‚ôüÔ∏è", "latitude": 43.4095, "longitude": 39.9605},
                ],
                "judges": [admin],
                "participations": [{"player": p} for p in players[10:18]]
            },
            # --- –ë–£–î–£–©–ò–ï ---
            {
                "data": {
                    "title": "–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä", "date": today + datetime.timedelta(days=14), "is_team": True, "max_teams": 10, "max_members": 40,
                    "description": "–¢—É—Ä–Ω–∏—Ä –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –±–æ–ª—å—à–æ–≥–æ —Ç–µ–Ω–Ω–∏—Å–∞. –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –ø—Ä–æ–π–¥—É—Ç –Ω–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ—Ä—Ç–∞—Ö —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º. –ü—Ä–∏–≥–ª–∞—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ø–∞—Ä–Ω–æ–º —Ä–∞–∑—Ä—è–¥–µ. –û—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ —Å–∏–ª—ã –ø–µ—Ä–µ–¥ –æ—Å–µ–Ω–Ω–∏–º —Å–µ–∑–æ–Ω–æ–º."
                },
                "media": [{"url": "https://static.ernur.kz/article/5e2e6914850e9.jpg", "name": "–¢–µ–Ω–Ω–∏—Å–Ω—ã–π –∫–æ—Ä—Ç", "media_type": MediaEnum.image}],
                "activities": [
                    {"name": "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∂–µ—Ä–µ–±—å–µ–≤–∫–∞", "is_scoreable": False, "start_dt": datetime.datetime(2025, 8, 4, 9, 0), "end_dt": datetime.datetime(2025, 8, 4, 10, 0)},
                    {"name": "–ü–∞—Ä–Ω—ã–π —Ä–∞–∑—Ä—è–¥", "is_scoreable": False, "start_dt": datetime.datetime(2025, 8, 4, 10, 0), "end_dt": datetime.datetime(2025, 8, 4, 14, 0)},
                    {"name": "–û–¥–∏–Ω–æ—á–Ω—ã–π —Ä–∞–∑—Ä—è–¥", "is_scoreable": False, "start_dt": datetime.datetime(2025, 8, 4, 14, 0), "end_dt": datetime.datetime(2025, 8, 4, 18, 0)}
                ],
                "participations": [
                    {"team_name": "–ü–æ–¥–∞—á–∞ –Ω–∞–≤—ã–ª–µ—Ç", "captain": players[8], "members": [players[9]], "avatar": "https://api.dicebear.com/8.x/shapes/svg?seed=ace"},
                ]
            },
            {
                "data": {
                    "title": "–õ–µ—Ç–Ω–∏–π –ª–µ–≥–∫–æ–∞—Ç–ª–µ—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–±–µ–≥", "date": today + datetime.timedelta(days=30), "is_team": False, "max_members": 200,
                    "description": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –µ–∂–µ–≥–æ–¥–Ω—ã–π –∑–∞–±–µ–≥ –ø–æ –û–ª–∏–º–ø–∏–π—Å–∫–æ–º—É –ø–∞—Ä–∫—É. –î–∏—Å—Ç–∞–Ω—Ü–∏—è 5 –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ —Å —Å–µ–º—å–µ–π –∏ –¥—Ä—É–∑—å—è–º–∏, —á—Ç–æ–±—ã –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–º –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º –∏ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–º–∏ –≤–∏–¥–∞–º–∏."
                },
                "media": [{"url": "https://avatars.mds.yandex.net/i?id=2757793f7648f3b10529faf07980cec5_l-5258779-images-thumbs&n=13", "name": "–ë–µ–≥—É–Ω—ã –Ω–∞ —Å—Ç–∞—Ä—Ç–µ", "media_type": MediaEnum.image}],
                "activities": [
                    {"name": "–í—ã–¥–∞—á–∞ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤", "is_scoreable": False, "start_dt": datetime.datetime(2025, 8, 20, 8, 0), "end_dt": datetime.datetime(2025, 8, 20, 9, 30)},
                    {"name": "–°—Ç–∞—Ä—Ç –∑–∞–±–µ–≥–∞ –Ω–∞ 5 –∫–º", "is_scoreable": False, "start_dt": datetime.datetime(2025, 8, 20, 10, 0), "end_dt": datetime.datetime(2025, 8, 20, 11, 30)},
                    {"name": "–ù–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π", "is_scoreable": False, "start_dt": datetime.datetime(2025, 8, 20, 12, 0), "end_dt": datetime.datetime(2025, 8, 20, 12, 30)}
                ],
                "participations": []
            },
            # --- –ü–†–û–®–ï–î–®–ò–ï ---
            {
                "data": {
                    "title": "Sirius Summer Volleyball Cup", "date": today - datetime.timedelta(days=20), "is_team": True, "max_teams": 6, "max_members": 30,
                    "description": "–ï–∂–µ–≥–æ–¥–Ω—ã–π –∫—É–±–æ–∫ –ø–æ –ø–ª—è–∂–Ω–æ–º—É –≤–æ–ª–µ–π–±–æ–ª—É. –°–æ–ª–Ω—Ü–µ, –ø–µ—Å–æ–∫ –∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω—ã–µ –º–∞—Ç—á–∏. –ö–æ–º–∞–Ω–¥—ã —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–ª–∏—Å—å –∑–∞ –∑–≤–∞–Ω–∏–µ —á–µ–º–ø–∏–æ–Ω–æ–≤ –ª–µ—Ç–Ω–µ–≥–æ —Å–µ–∑–æ–Ω–∞ 2025 –≥–æ–¥–∞."
                },
                "media": [{"url": "https://avatars.mds.yandex.net/i?id=779be1c7ea939864f4641ed917c827c7_l-10385090-images-thumbs&n=13", "name": "–ü–ª—è–∂–Ω—ã–π –≤–æ–ª–µ–π–±–æ–ª", "media_type": MediaEnum.image}],
                "activities": [{"name": "–ü–µ—Ä–≤—ã–π —Å–µ—Ç", "is_scoreable": True, "max_score": 25}, {"name": "–í—Ç–æ—Ä–æ–π —Å–µ—Ç", "is_scoreable": True, "max_score": 25}],
                "participations": [
                    {"team_name": "SunStrikers", "captain": players[10], "members": [players[11]], "avatar": "https://api.dicebear.com/8.x/shapes/svg?seed=sun"},
                    {"team_name": "Net Ninjas", "captain": players[12], "members": [players[13]], "avatar": "https://api.dicebear.com/8.x/shapes/svg?seed=ninja"},
                ]
            },
            {
                "data": {
                    "title": "–°–æ—Å—Ç—è–∑–∞–Ω–∏—è –ø–æ –Ω–∞—Å—Ç–æ–ª—å–Ω–æ–º—É —Ç–µ–Ω–Ω–∏—Å—É", "date": today - datetime.timedelta(days=45), "is_team": False, "max_members": 15,
                    "description": "–û—Ç–∫—Ä—ã—Ç—ã–µ –ª–∏—á–Ω—ã–µ —Å–æ—Å—Ç—è–∑–∞–Ω–∏—è –ø–æ –Ω–∞—Å—Ç–æ–ª—å–Ω–æ–º—É —Ç–µ–Ω–Ω–∏—Å—É. –¢—É—Ä–Ω–∏—Ä –ø—Ä–æ—Ö–æ–¥–∏–ª –ø–æ –æ–ª–∏–º–ø–∏–π—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω–∞ –≤—ã–±—ã–≤–∞–Ω–∏–µ. –£—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ –∏ –≤–æ–ª—é –∫ –ø–æ–±–µ–¥–µ."
                },
                "media": [{"url": "https://avatars.mds.yandex.net/i?id=87dd7fd9ff85ec9d9b95b2743780a8d6_l-9069268-images-thumbs&n=13", "name": "–ò–≥—Ä–∞ –≤ –ø–∏–Ω–≥-–ø–æ–Ω–≥", "media_type": MediaEnum.image}],
                "activities": [{"name": "–ö—Ä—É–≥–æ–≤–æ–π —ç—Ç–∞–ø", "is_scoreable": True, "max_score": 100}, {"name": "–§–∏–Ω–∞–ª", "is_scoreable": True, "max_score": 150}],
                "participations": [{"player": p} for p in players[0:8]]
            },
        ]

        # --- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –¶–ò–ö–õ –°–û–ó–î–ê–ù–ò–Ø ---
        for event_info in DEMO_EVENTS_DATA:
            event_data = event_info["data"]
            print(f"–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event_data['title']}")

            new_event = EventOrm(**event_data)
            # –¢–µ–ø–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –ø–æ–ª–Ω—ã–µ, is_scoreable –±–æ–ª—å—à–µ –Ω–µ —Ö–∞—Ä–¥–∫–æ–¥–∏–º
            new_event.activities = [EventActivityOrm(**act) for act in event_info.get("activities", [])]
            new_event.media = [EventMediaOrm(**med) for med in event_info.get("media", [])]
            new_event.judges = [EventJudgeOrm(user_id=j.id) for j in event_info.get("judges", [])]
            session.add(new_event)
            await session.flush()

            # –°–æ–∑–¥–∞–µ–º —É—á–∞—Å—Ç–∏—è –∏ –Ω–∞—á–∏—Å–ª—è–µ–º –æ—á–∫–∏
            for part_data in event_info.get("participations", []):
                if "team_name" in part_data:  # –ö–æ–º–∞–Ω–¥–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ
                    p = EventParticipationOrm(
                        event_id=new_event.id, creator_id=part_data["captain"].id,
                        participant_type=ParticipantTypeEnum.team, team_name=part_data["team_name"],
                        team_avatar_url=part_data.get("avatar")
                    )
                    p.members.append(ParticipationMemberOrm(user_id=part_data["captain"].id))
                    for member in part_data["members"]:
                        p.members.append(ParticipationMemberOrm(user_id=member.id))
                else:  # –õ–∏—á–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ
                    player = part_data["player"]
                    p = EventParticipationOrm(
                        event_id=new_event.id, creator_id=player.id,
                        participant_type=ParticipantTypeEnum.individual
                    )
                    p.members.append(ParticipationMemberOrm(user_id=player.id))

                session.add(p)
                await session.flush()

                # –ù–∞—á–∏—Å–ª—è–µ–º –æ—á–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–∏—Ö –∏ –ø—Ä–æ—à–µ–¥—à–∏—Ö
                if new_event.date <= today:
                    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –û–¶–ï–ù–ò–í–ê–ï–ú–´–ï –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                    for activity in [act for act in new_event.activities if act.is_scoreable]:
                        score = ScoreOrm(
                            participation_id=p.id, activity_id=activity.id,
                            score=random.randint(int(activity.max_score * 0.4), activity.max_score)
                        )
                        session.add(score)

        await session.commit()
    print("–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
